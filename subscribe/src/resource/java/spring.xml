<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:task="http://www.springframework.org/schema/task"  
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/task  http://www.springframework.org/schema/task/spring-task-4.0.xsd  
		http://www.springframework.org/schema/aop  http://www.springframework.org/schema/aop/spring-aop-4.0.xsd  
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd
	">
	
	<util:properties id="wehchatConfig" location="classpath:wechat.propertics" />
	
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		 <property name="location">
	  			<value>classpath:database.propertics</value>
		 </property>
	</bean>
	
	<aop:aspectj-autoproxy proxy-target-class="true"></aop:aspectj-autoproxy>  
	
	<context:component-scan base-package="com.wechat"/>
	
	<task:annotation-driven/> 
	
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
		<!-- 数据源驱动类可不写，Druid默认会自动根据URL识别DriverClass -->
	  	<property name="driverClassName" value="${jdbc_driver}" />
	 
	    <!-- 基本属性 url、user、password -->
	    <property name="url" value="${jdbc_url}" />
	    <property name="username" value="${jdbc_username}" />
	    <property name="password" value="${jdbc_password}" />
	 
	    <!-- 配置初始化大小、最小、最大 -->
	    <property name="initialSize" value="${jdbc_initialSize}" />
	    <property name="minIdle" value="${jdbc_minIdle}" />
	    <property name="maxActive" value="${jdbc_maxActive}" />
	 
	    <!-- 配置获取连接等待超时的时间 -->
	    <property name="maxWait" value="${jdbc_maxWait}" />
	 
	    <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
	    <property name="timeBetweenEvictionRunsMillis" value="60000" />
	 
	    <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
	    <property name="minEvictableIdleTimeMillis" value="300000" />
	 
	    <property name="validationQuery" value="SELECT 'x'" />
	    <property name="testWhileIdle" value="true" />
	    <property name="testOnBorrow" value="false" />
	    <property name="testOnReturn" value="false" />
	</bean>
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<constructor-arg ref="dataSource"></constructor-arg>
	</bean>
</beans>
